#!/usr/bin/env node
var path=require("path"),stdin=process.stdin,execSync=require("child_process").execSync,clear=require("clear"),prompt=require("prompt"),args=process.argv,configFileRelativePath=args[2],configFilePath=path.resolve(process.cwd(),configFileRelativePath),configs=require(configFilePath),myterminalCliCompanion=function(){var n,e=[],t=function(e){n=e},o=function(){i(),c(),a()},i=function(){clear(),console.log("** myterminal-cli** \n")},c=function(){var e=r();console.log(e.title,"\n"),s().forEach(function(n){console.log(n+": "+e.commands[n].title)}),e!==n?console.log("\nq: Go back...\n"):console.log("\nq: Quit\n")},r=function(){return e.length?e.reduce(function(n,e){return n.commands[e]},n):n},s=function(){return Object.keys(r().commands)},a=function(){u(),stdin.on("data",m)},l=function(){stdin.removeListener("data",m)},u=function(){stdin.setRawMode(!0),stdin.resume(),stdin.setEncoding("utf8")},m=function(n){if(l(),""===n)process.exit();else if("q"===n)e.length||process.exit(),e.pop(),o();else if(s().indexOf(n)>-1){var t=f(n),i=t.task;i?p(t):(e.push(n),o())}else o()},f=function(t){return e.length?e.reduce(function(n,e){return n.commands[e]},n).commands[t]:n.commands[t]},p=function(n){clear(),console.log("Executing command:",n.title,"\n"),n.params?y(n):d(n.task)},d=function(n){try{execSync(n,{stdio:[0,1,2]})}catch(n){}g()},g=function(){console.log("\nDone!\nPress any key to continue..."),u(),stdin.on("data",v)},h=function(){stdin.removeListener("data",v)},v=function(){h(),o()},y=function(n){prompt.start(),prompt.get(n.params,function(e,t){var o=[n.task].concat(n.params.map(function(e,o){return t[n.params[o]]})).join(" ");d(o)})};return{setConfigs:t,showOptions:o}}();prompt.message="Enter the value for ",prompt.delimiter="",myterminalCliCompanion.setConfigs(configs),myterminalCliCompanion.showOptions();