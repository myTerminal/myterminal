#!/usr/bin/env node
var path=require("path"),stdin=process.stdin,execSync=require("child_process").execSync,clear=require("clear"),prompt=require("prompt"),args=process.argv,configFileRelativePath=args[2],configFilePath=path.resolve(process.cwd(),configFileRelativePath),configs=require(configFilePath),myterminalCliCompanion=function(){var n,t=[],e=function(t){n=t},o=function(){i(),c(),r(),u()},i=function(){clear(),console.log("** myterminal-cli **\n")},c=function(){var e=t.map(function(n,e){return t.slice(0,e+1)}).map(function(t,e){return t.reduce(function(n,t){return n.commands[t]},n)}).map(function(n){return n.title});console.log([n.title].concat(e).join(" -> ")+"\n")},r=function(){var t=s();a().forEach(function(n){console.log(n+": "+t.commands[n].title)}),t!==n?console.log("\nq: Go back...\n"):console.log("\nq: Quit\n")},s=function(){return t.length?t.reduce(function(n,t){return n.commands[t]},n):n},a=function(){return Object.keys(s().commands)},u=function(){m(),stdin.on("data",f)},l=function(){stdin.removeListener("data",f)},m=function(){stdin.setRawMode(!0),stdin.resume(),stdin.setEncoding("utf8")},f=function(n){if(l(),""===n)process.exit();else if("q"===n)t.length||process.exit(),t.pop(),o();else if(a().indexOf(n)>-1){var e=p(n),i=e.task;i?d(e):(t.push(n),o())}else o()},p=function(e){return t.length?t.reduce(function(n,t){return n.commands[t]},n).commands[e]:n.commands[e]},d=function(n){clear(),console.log("Executing command:",n.title,"\n"),n.params?q(n):g(n.task)},g=function(n){try{execSync(n,{stdio:[0,1,2]})}catch(n){}h()},h=function(){console.log("\nDone!\nPress any key to continue..."),m(),stdin.on("data",y)},v=function(){stdin.removeListener("data",y)},y=function(){v(),o()},q=function(n){prompt.start(),prompt.get(n.params,function(t,e){var o=[n.task].concat(n.params.map(function(t,o){return e[n.params[o]]})).join(" ");g(o)})};return{setConfigs:e,showOptions:o}}();prompt.message="Enter the value for ",prompt.delimiter="",myterminalCliCompanion.setConfigs(configs),myterminalCliCompanion.showOptions();