"use strict";var _require=require("child_process"),spawn=_require.spawn,_process=process,stdin=_process.stdin,prompt=require("prompt"),chalk=require("chalk"),clear=require("clear"),_require2=require("../package.json"),version=_require2.version,configs=void 0,mostRecentlyRunCommand=void 0,lastRunShellCommand=void 0,currentCommandInstance=void 0,currentState=[],getSeparator=function(n){return new Array(process.stdout.columns-1).join(",").split(",").map(function(){return n}).join("")},getString=function(n,e){return new Array(e).join(",").split(",").map(function(){return n}).join("")},getCenteredText=function(n){var e=getSeparator(" ").length-n.length;return getString(" ",Math.floor(e/2))+n+getString(" ",Math.ceil(e/2))},printMenuHeader=function(){var n=getCenteredText("myterminal-cli v"+version);console.log(chalk.inverse.cyan(getSeparator(" "))),console.log(chalk.inverse.cyan(n)),console.log(chalk.inverse.cyan(getSeparator(" "))+"\n")},printMenuBreadCrumbs=function(){var n=currentState.map(function(n,e){return currentState.slice(0,e+1)}).map(function(n){return n.reduce(function(n,e){return n.commands[e]},configs)}).map(function(n){return n.title});console.log(chalk.cyan([configs.title].concat(n).join(" -> ")+"'\n'"))},printMenuInstructions=function(){console.log("Press a marked key to perform the respective operation\n")},getCurrentCommandBranch=function(){return currentState.length?currentState.reduce(function(n,e){return n.commands[e]},configs):configs},getCurrentCommandOptions=function(){return Object.keys(getCurrentCommandBranch().commands)},printEmptyLine=function(){console.log("")},printMenuOptions=function(){var e=getCurrentCommandBranch();getCurrentCommandOptions().forEach(function(n){console.log(chalk.green("("+n+") "+e.commands[n].title)+(e.commands[n].commands?"...":""))}),printEmptyLine(),mostRecentlyRunCommand&&console.log(chalk.green("(;) ")+"Select the last action"),lastRunShellCommand&&console.log(chalk.green("(.) ")+"Re-run the last command"),console.log(chalk.green("(/) ")+"Run a custom command"),e!==configs?console.log(chalk.red("\n(q) ")+"Go back...\n"):console.log(chalk.red("\n(q) ")+"Quit\n")},rePrintMenu=function(){clear(),printMenuHeader(),printMenuBreadCrumbs(),printMenuInstructions(),printMenuOptions()},listenToKeyStrokes=function(){stdin.setRawMode(!0),stdin.resume(),stdin.setEncoding("utf8")},getSpecificCommandDirectory=function(n){return n||getCurrentCommandBranch().directory||"."},bindKeyStrokesToQuitCurrentCommand=function(){listenToKeyStrokes(),stdin.on("data",keyStrokeHandlerForQuittingCurrentCommand)},executeShellCommand=function(n,e){var t=n.split(" "),o=t[0],r=t.slice(1),i=getSpecificCommandDirectory(e);lastRunShellCommand={task:n,directory:i},(currentCommandInstance=spawn(o,r,{cwd:i,stdio:[0,1,2],shell:!0})).on("close",finishUpWithCurrentCommand),bindKeyStrokesToQuitCurrentCommand()},bindKeyStrokesToNavigate=function(){listenToKeyStrokes(),stdin.on("data",keyStrokeHandlerForNavigation)},promptForAction=function(){rePrintMenu(),bindKeyStrokesToNavigate()},printCommandLogHeader=function(n){console.log(chalk.inverse.green(getCenteredText("Command: "+(n.title||n.task)))),console.log(chalk.inverse.white(getCenteredText("Directory: "+getSpecificCommandDirectory(n.directory)))),printEmptyLine()},gatherParamsAndExecuteCommand=function(o){prompt.start(),prompt.get(o.params,function(n,t){try{var e=[o.task].concat(o.params.map(function(n,e){return t[o.params[e]]})).join(" ");executeShellCommand(e,o.directory)}catch(n){promptForAction()}})},prepareToExecuteCommandObject=function(n){printCommandLogHeader(mostRecentlyRunCommand=n),n.params?gatherParamsAndExecuteCommand(n):executeShellCommand(n.task,n.directory)},printCommandAbortInstructions=function(){console.log("You can press ^-C to abort current task\n")},getCommandForOption=function(n){return currentState.length?currentState.reduce(function(n,e){return n.commands[e]},configs).commands[n]:configs.commands[n]},exit=function(){clear(),process.exit()},promptForCustomCommandAndExecute=function(){prompt.start(),prompt.get(["custom-command","directory"],function(n,e){try{var t=getSpecificCommandDirectory(e.directory);printEmptyLine(),prepareToExecuteCommandObject({title:e["custom-command"],task:e["custom-command"],directory:t})}catch(n){promptForAction()}})},keyStrokeHandlerForNavigation=function(n){if(unbindKeyStrokesToNavigate(),""===n)exit();else if("/"===n)rePrintMenu(),printCommandAbortInstructions(),promptForCustomCommandAndExecute();else if(";"===n)mostRecentlyRunCommand?(rePrintMenu(),printCommandAbortInstructions(),prepareToExecuteCommandObject(mostRecentlyRunCommand)):promptForAction();else if("."===n)lastRunShellCommand?(rePrintMenu(),printCommandAbortInstructions(),printCommandLogHeader(lastRunShellCommand),executeShellCommand(lastRunShellCommand.task,lastRunShellCommand.directory)):promptForAction();else if("q"===n)currentState.length||exit(),currentState.pop(),promptForAction();else if(-1<getCurrentCommandOptions().indexOf(n)){var e=getCommandForOption(n);e.task?(rePrintMenu(),printCommandAbortInstructions(),prepareToExecuteCommandObject(e)):(currentState.push(n),promptForAction())}else promptForAction()},unbindKeyStrokesToNavigate=function(){stdin.removeListener("data",keyStrokeHandlerForNavigation)},abortCurrentShellCommand=function(){currentCommandInstance.kill(),currentCommandInstance=null},keyStrokeHandlerForQuittingCurrentCommand=function(n){""===n&&abortCurrentShellCommand()},unbindKeyStrokesToQuitCurrentCommand=function(){stdin.removeListener("data",keyStrokeHandlerForQuittingCurrentCommand)},finishUpWithCurrentCommand=function(){console.log("\n"+chalk.green(getSeparator("-"))),currentCommandInstance=null,unbindKeyStrokesToQuitCurrentCommand(),bindKeyStrokesToNavigate()},bindEventForAbortingCurrentCommandOnWindows=function(){process.on("SIGINT",function(){currentCommandInstance?abortCurrentShellCommand():process.exit()})};module.exports.init=function(){bindEventForAbortingCurrentCommandOnWindows(),promptForAction()},module.exports.setConfigs=function(n){configs=n};